version: '3'
services:

  rabbit:
    container_name: rabbit
    image: rabbitmq:3
    networks:
      - testing_net

  client:
    container_name: client
    image: tp2node:latest
    entrypoint: /node client
    depends_on:
      - rabbit
    environment:
      - RMQConnectionString=amqp://guest:guest@rabbit:5672/
      - MatchDataPath=/data/matches_test.csv
      - PlayerDataPath=/data/players_test.csv
      - MatchDataExchange=match_record_fanout
      - MatchDataBatchSize=10000
      - PlayerDataExchange=player_record_fanout
      - PlayerDataBatchSize=10000
    networks:
      - testing_net
    volumes:
      - ../data:/data:ro

  join:
    container_name: join
    image: tp2node:latest
    entrypoint: /node join
    depends_on:
      - rabbit
    environment:
      - RMQConnectionString=amqp://guest:guest@rabbit:5672/
      - MatchDataExchange=match_record_fanout
      - PlayerDataExchange=player_record_fanout
    networks:
      - testing_net

#  long_match_filter_1:
#    container_name: long_match_filter_1
#    image: tp2node:latest
#    entrypoint: /node lmfilter
#    depends_on:
#      - rabbit
#    environment:
#      - RMQConnectionString=amqp://guest:guest@rabbit:5672/
#      - InstanceId=1
#      - MatchDataExchange=match_record_fanout
#      - LongMatchFilterInputQueue=lmfilter_input_queue
#      - AggregationExchange=aggregation_exchange
#      - LongMatchQueue=long_matches
#    networks:
#      - testing_net

#  long_match_filter_2:
#    container_name: long_match_filter_2
#    image: tp2node:latest
#    entrypoint: /node lmfilter
#    depends_on:
#      - rabbit
#    environment:
#      - RMQConnectionString=amqp://guest:guest@rabbit:5672/
#      - InstanceId=2
#      - MatchDataExchange=match_record_fanout
#      - LongMatchFilterInputQueue=lmfilter_input_queue
#      - AggregationExchange=aggregation_exchange
#      - LongMatchQueue=long_matches
#    networks:
#      - testing_net

  large_rating_difference_filter_1:
    container_name: large_rating_difference_filter_1
    image: tp2node:latest
    entrypoint: /node lrdfilter
    depends_on:
      - rabbit
    environment:
      - RMQConnectionString=amqp://guest:guest@rabbit:5672/
      - InstanceId=1
      - JointDataExchange=joint_record_fanout
      - LargeRatingDifferenceInputQueue=ldf_input_queue
      - AggregationExchange=aggregation_exchange
      - LargeRatingDifferenceMatchQueue=large_rating_difference_matches
    networks:
      - testing_net

  sink:
    container_name: sink
    image: tp2node:latest
    entrypoint: /node sink
    depends_on:
      - rabbit
    environment:
      - RMQConnectionString=amqp://guest:guest@rabbit:5672/
      - AggregationExchange=aggregation_exchange
      - LongMatchQueue=long_matches
    networks:
      - testing_net

#  server:
#    container_name: server
#    image: tp1node:latest
#    entrypoint: /node blockchain
#    environment:
#      - ReaderCount=2
#    networks:
#      - testing_net
#    volumes:
#      - ./config/blockchain:/etc/distros/config:ro

#  service:
#    container_name: service
#    image: tp1node:latest
#    entrypoint: /node service
#    environment:
#      - BlockchainServerName=server
#      - ReaderCount=2
#      - PackerChunkThreshold=10000
#      - InputChunkQueueCapacity=15000
#    depends_on:
#      - server
#    networks:
#      - testing_net
#    volumes:
#      - ./config/service:/etc/distros/config:ro

#  autoclient:
#    container_name: autoclient
#    image: tp1node:latest
#    entrypoint: /node autoclient
#    environment:
#      - WriterCount=100
#      - ReaderCount=4
#    depends_on:
#      - service
#    networks:
#      - testing_net
#    volumes:
#      - ./config/autoclient:/etc/distros/config:ro

networks:
  testing_net:
    name: testing_net
    ipam:
      driver: default
      config:
       - subnet: 172.25.125.0/24